{
  "version": 3,
  "sources": ["../../../../src/wrapper/server/Player/index.ts"],
  "sourcesContent": ["import * as Minecraft from \"@minecraft/server\";\r\nimport { NewEntity } from \"../Entity/index\";\r\n\r\nexport default class NewPlayer extends NewEntity {\r\n    private player: Minecraft.Player;\r\n    \r\n    constructor(copyFrom: Minecraft.Player) {\r\n        super(copyFrom);\r\n        this.player = copyFrom;\r\n    }\r\n\r\n    getName(): string {\r\n        return this.player.name;\r\n    }\r\n\r\n    getNameTag(): string {\r\n        return this.player.nameTag;\r\n    }\r\n\r\n    setNameTag(nameTag: string): void {\r\n        this.player.nameTag = nameTag;\r\n    }\r\n\r\n    kick(reason: string): void {\r\n        this.player.runCommand(`kick ${JSON.stringify(this.getName())} ${JSON.stringify(reason)}`);\r\n    }\r\n\r\n    getSelectedSlot(): number {\r\n        return this.player.selectedSlot;\r\n    }\r\n\r\n    setSelectedSlot(slot: number): void {\r\n        this.player.selectedSlot = slot;\r\n    }\r\n\r\n    getTotalXpNeededForNextLevel(): number {\r\n        return this.player.totalXpNeededForNextLevel;\r\n    }\r\n\r\n    getXpEarnedAtCurrentLevel(): number {\r\n        return this.player.xpEarnedAtCurrentLevel;\r\n    }\r\n\r\n    addExperience(amount: number): number {\r\n        return this.player.addExperience(amount);\r\n    }\r\n\r\n    addLevels(amount: number): number {\r\n        return this.player.addLevels(amount);\r\n    }\r\n\r\n    getItemCooldown(itemCategory: string): number {\r\n        return this.player.getItemCooldown(itemCategory);\r\n    }\r\n\r\n    getSpawnPoint(): Minecraft.Vector3 | undefined {\r\n        return this.player.getSpawnPoint();\r\n    }\r\n\r\n    getTotalXp(): number {\r\n        return this.player.getTotalXp();\r\n    }\r\n\r\n    isOperator(): boolean {\r\n        return this.player.isOp();\r\n    }\r\n\r\n    setOperator(status: boolean): void {\r\n        this.player.setOp(status);\r\n    }\r\n\r\n    playSound(soundID: string, soundOptions?: PlayerSoundOptions): void {\r\n        this.player.playSound(soundID, soundOptions);\r\n    }\r\n\r\n    postClientMessage(id: string, value: string): void {\r\n        this.player.postClientMessage(id, value);\r\n    }\r\n\r\n    resetLevel(): void {\r\n        this.player.resetLevel();\r\n    }\r\n\r\n    sendMessage(message: (RawMessage | string)[] | RawMessage | string): void {\r\n        this.player.sendMessage(message);\r\n    }\r\n\r\n    setSpawnPoint(spawnPoint?: DimensionLocation): void {\r\n        this.player.setSpawnPoint(spawnPoint);\r\n    }\r\n\r\n    startItemCooldown(itemCategory: string, tickDuration: number): void {\r\n        this.player.startItemCooldown(itemCategory, tickDuration);\r\n    }\r\n}"],
  "mappings": "AACA,OAAS,aAAAA,MAAiB,kBAE1B,qBAAqBC,UAAkBD,CAAU,CAG7C,YAAYE,EAA4B,CACpC,MAAMA,CAAQ,EACd,KAAK,OAASA,CAClB,CAEA,SAAkB,CACd,OAAO,KAAK,OAAO,IACvB,CAEA,YAAqB,CACjB,OAAO,KAAK,OAAO,OACvB,CAEA,WAAWC,EAAuB,CAC9B,KAAK,OAAO,QAAUA,CAC1B,CAEA,KAAKC,EAAsB,CACvB,KAAK,OAAO,WAAW,QAAQ,KAAK,UAAU,KAAK,QAAQ,CAAC,KAAK,KAAK,UAAUA,CAAM,GAAG,CAC7F,CAEA,iBAA0B,CACtB,OAAO,KAAK,OAAO,YACvB,CAEA,gBAAgBC,EAAoB,CAChC,KAAK,OAAO,aAAeA,CAC/B,CAEA,8BAAuC,CACnC,OAAO,KAAK,OAAO,yBACvB,CAEA,2BAAoC,CAChC,OAAO,KAAK,OAAO,sBACvB,CAEA,cAAcC,EAAwB,CAClC,OAAO,KAAK,OAAO,cAAcA,CAAM,CAC3C,CAEA,UAAUA,EAAwB,CAC9B,OAAO,KAAK,OAAO,UAAUA,CAAM,CACvC,CAEA,gBAAgBC,EAA8B,CAC1C,OAAO,KAAK,OAAO,gBAAgBA,CAAY,CACnD,CAEA,eAA+C,CAC3C,OAAO,KAAK,OAAO,cAAc,CACrC,CAEA,YAAqB,CACjB,OAAO,KAAK,OAAO,WAAW,CAClC,CAEA,YAAsB,CAClB,OAAO,KAAK,OAAO,KAAK,CAC5B,CAEA,YAAYC,EAAuB,CAC/B,KAAK,OAAO,MAAMA,CAAM,CAC5B,CAEA,UAAUC,EAAiBC,EAAyC,CAChE,KAAK,OAAO,UAAUD,EAASC,CAAY,CAC/C,CAEA,kBAAkBC,EAAYC,EAAqB,CAC/C,KAAK,OAAO,kBAAkBD,EAAIC,CAAK,CAC3C,CAEA,YAAmB,CACf,KAAK,OAAO,WAAW,CAC3B,CAEA,YAAYC,EAA8D,CACtE,KAAK,OAAO,YAAYA,CAAO,CACnC,CAEA,cAAcC,EAAsC,CAChD,KAAK,OAAO,cAAcA,CAAU,CACxC,CAEA,kBAAkBP,EAAsBQ,EAA4B,CAChE,KAAK,OAAO,kBAAkBR,EAAcQ,CAAY,CAC5D,CACJ",
  "names": ["NewEntity", "NewPlayer", "copyFrom", "nameTag", "reason", "slot", "amount", "itemCategory", "status", "soundID", "soundOptions", "id", "value", "message", "spawnPoint", "tickDuration"]
}
